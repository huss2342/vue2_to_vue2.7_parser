<script>
import translationsHelper from 'js/composable/translationsHelper';
import inventorySalesData from 'js/composable/inventorySalesData';
import DataTablePager from 'js/components/UI/DataTablePager';
import { useStore } from 'js/store';
import { defineComponent, computed } from 'vue';

export default defineComponent({
    name: 'variant-content-inventory-tab',
    components: {
        DataTablePager
    },
    props: {
        translations: { type: Object, required: true }
    },
    setup(props) {
        const store = useStore();
        const { replaceTranslationPlaceholder } = translationsHelper();
        const {
            currentPage, lastUpdated, previous, next, goToPage, getPageBeginning, getPageEnd, paginateArray
        } = inventorySalesData(props.translations);

        const availability = computed(() => store.getters.availability);
        const itemInventory = computed(() => store.getters.itemInventory);

        const myDistributorsTotal = computed(
            () => itemInventory.value.Distributors.map(item => item.QuantityForPartner).reduce((prev, curr) => prev + curr, 0)
        );
        const pagedDistributors = computed(() => paginateArray(itemInventory.value.Distributors, 10));
        const pageGroup = computed(() => {
            const begin = getPageBeginning();
            const end = getPageEnd(pagedDistributors.value, itemInventory.value.Distributors);
            return replaceTranslationPlaceholder(props.translations.PageGroup, begin, end, itemInventory.value.Distributors.length);
        });

        return {
            currentPage,
            lastUpdated,
            previous,
            next,
            goToPage,
            getPageBeginning,
            getPageEnd,
            paginateArray,
            replaceTranslationPlaceholder,
            availability,
            itemInventory,
            myDistributorsTotal,
            pageGroup,
            pagedDistributors
        };
    }
});
</script>