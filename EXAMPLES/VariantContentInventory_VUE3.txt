<script>
import PartialLoader from 'js/components/UI/PartialLoader';
import VLink from 'js/components/UI/VLink';
import { pushTrackingEvent } from 'js/common/analytics';
import { INVENTORY } from 'js/common/analyticsEvents';
import { defineComponent, computed, ref } from 'vue';
import { useStore } from 'js/store';

export default defineComponent({
    name: 'variant-content-inventory',
    components: {
        PartialLoader,
        VLink
    },
    props: {
        baseProductModel: { type: Object, required: true },
        translations: { type: Object, required: true }
    },
    setup(props) {
        const store = useStore();
        const activeTab = ref(1);
        const isLoading = ref(true);

        const fetchingInventory = computed(() => store.getters.fetchingInventory);
        const itemInventory = computed(() => store.getters.itemInventory);
        const salesData = computed(() => store.getters.salesData);
        const loadingMessage = computed(
            () => ((activeTab.value === 1) ? props.translations.GatheringInventoryData : props.translations.GatheringSalesData)
        );
        const toggleTab = tab => {
            isLoading.value = true;
            activeTab.value = tab;
            if (tab === 1) {
                pushTrackingEvent(INVENTORY.OVERVIEW_TOGGLE.CATEGORY,
                    INVENTORY.OVERVIEW_TOGGLE.ACTION,
                    itemInventory.value.ItemNumber);
            } else {
                pushTrackingEvent(INVENTORY.SALES_TOGGLE.CATEGORY,
                    INVENTORY.SALES_TOGGLE.ACTION,
                    itemInventory.value.ItemNumber);
            }
        };
        return {
            toggleTab,
            isLoading,
            loadingMessage,
            salesData,
            fetchingInventory,
            itemInventory,
            activeTab
        };
    }
});
</script>