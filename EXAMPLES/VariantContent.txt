<script>
import { mapGetters } from 'vuex';
import ProductPrintOptions from 'js/mixins/product-print-options';
import { pushTrackingEvent } from 'js/common/analytics';
import HEADER_HEIGHTS from 'js/common/headerHeights';
import { EVENTS, EventBus } from 'js/common/events';
import { JUMP_NAV, JUMP_NAV_BAR_CATEGORY, CLICK_ACTION } from 'js/common/analyticsEvents';

export default {
    name: 'variant-content',
    mixins: [ProductPrintOptions],
    props: {
        baseProductModel: {
            type: Object,
            required: true
        },
        productVariant: {
            type: Object,
            required: true
        },
        certsAndDocsModel: {
            type: Object,
            required: true
        },
        priceVariant: {
            type: Object,
            required: true
        },
        translations: {
            type: Object,
            required: true
        }
    },
    data() {
        return {
            JUMP_NAV,
            sections: [],
            sectionOffsets: [],
            scrollPosition: 0,
            activeSection: 0,
            headerHeight: 0,
            impersonationBarHeight: HEADER_HEIGHTS.IMPERSONATION_BAR_HEIGHT,
            mobileImpersonationBarHeight: HEADER_HEIGHTS.IMPERSONATION_BAR_MOBILE_HEIGHT,
            triggerHeight: HEADER_HEIGHTS.PDP_STICKY_TRIGGER
        };
    },
    computed: {
        ...mapGetters([
            'isUserEmployeeAndNotImpersonating',
            'isImpersonating',
            'isNationalAccount',
            'isSupplier',
            'isUserEmployee',
            'showInventory',
            'isBroker',
            'isBuyingGroup',
            'product',
            'myNumber'
        ]),
        fixedNav() {
            return this.scrollPosition > this.triggerHeight;
        },
        currentOffset() {
            return this.scrollPosition + this.headerHeight;
        },
        showFeatures() {
            return true;
        },
        showNutrition() {
            return this.productVariant.ShowNutritionAndAllergens;
        },
        showGtins() {
            return this.baseProductModel.PackagingSection.GtinLevels;
        },
        showPricing() {
            return !this.isNationalAccount;
        },
        showCertifications() {
            return true;
        },
        showContacts() {
            return this.isSupplier || this.isUserEmployee;
        },
        showMyNumber() {
            return this.myNumber && !(this.isNationalAccount || this.isSupplier || this.isBroker || this.isBuyingGroup);
        }
    },
    watch: {
        currentOffset(newVal) {
            let adjust = 0;
            if (this.isImpersonating && this.$isMobileOrMobileLandscape) adjust = this.mobileImpersonationBarHeight;
            else if (this.isImpersonating && !this.$isMobileOrMobileLandscape) adjust = this.impersonationBarHeight;
            return this.setActiveSection(newVal + adjust);
        }
    },
    created() {
        EventBus.$on(EVENTS.PDP.SCROLL_TO_SECTION, this.scrollTo);
    },
    mounted() {
        window.addEventListener('resize', this.getOffsets);
        window.addEventListener('scroll', this.watchScroll);
        Object.keys(this.$refs).forEach(ref => {
            if (ref.includes('section')) this.sections.push(this.$refs[ref].id);
        });
        setTimeout(() => { this.getOffsets(); }, 1000);
    },
    beforeDestroy() {
        EventBus.$off(EVENTS.PDP.SCROLL_TO_SECTION, this.scrollTo);
    },
    methods: {
        setActiveSection(pos) {
            if (pos < this.sectionOffsets[0]) {
                this.activeSection = 0;
            } else if (pos >= this.sectionOffsets[0] && pos < this.sectionOffsets[1] && this.showFeatures) {
                this.activeSection = 1;
            } else if (pos >= this.sectionOffsets[1] && pos < this.sectionOffsets[2] && this.showNutrition) {
                this.activeSection = 2;
            } else if (pos >= this.sectionOffsets[2] && pos < this.sectionOffsets[3] && this.showGtins) {
                this.activeSection = 3;
            } else if (pos >= this.sectionOffsets[3] && pos < this.sectionOffsets[4] && this.showPricing) {
                this.activeSection = 4;
            } else if (pos >= this.sectionOffsets[4] && pos < this.sectionOffsets[5] && this.showCertifications) {
                this.activeSection = 5;
            } else if (pos >= this.sectionOffsets[5] && pos < this.sectionOffsets[6] && this.showInventory) {
                this.activeSection = 6;
            } else if (pos >= this.sectionOffsets[6] && this.showContacts) {
                this.activeSection = 7;
            }
        },
        scrollTo(val, label) {
            this.getOffsets();
            let offset = 0;
            if (val > 0) {
                const sectionId = this.sections[val - 1];
                if (this.isImpersonating && this.$isMobileOrMobileLandscape) {
                    offset = document.getElementById(sectionId).offsetTop - (this.headerHeight + this.mobileImpersonationBarHeight);
                } else if (this.isImpersonating && !this.$isMobileOrMobileLandscape) {
                    offset = document.getElementById(sectionId).offsetTop - (this.headerHeight + this.impersonationBarHeight);
                } else {
                    offset = document.getElementById(sectionId).offsetTop - (this.headerHeight);
                }
            }
            pushTrackingEvent(JUMP_NAV_BAR_CATEGORY, CLICK_ACTION, label);
            window.scrollTo({ top: offset, behavior: 'smooth' });
        },
        getOffsets() {
            this.sectionOffsets = [];
            this.sections.forEach(sectionId => {
                const offset = document.getElementById(sectionId).offsetTop;
                this.sectionOffsets.push(offset);
            });
            this.getHeaderHeight();
            this.setActiveSection(Math.floor(window.scrollY));
        },
        getHeaderHeight() {
            this.headerHeight = document.getElementById('stickyNav').clientHeight;
        },
        watchScroll() {
            this.scrollPosition = Math.floor(window.scrollY);
        }
    }
};
</script>